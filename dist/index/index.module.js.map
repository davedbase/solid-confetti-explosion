{"version":3,"file":"index.module.js","sources":["../../src/index.tsx"],"sourcesContent":["import {\n  Component,\n  Show,\n  For,\n  onMount,\n  Accessor,\n  mergeProps,\n  createMemo,\n  createSignal,\n  onCleanup\n} from \"solid-js\";\n\nimport \"./styles.css\";\n\ntype Particle = {\n  color: string; // color of particle\n  degree: number; // vector direction, between 0-360 (0 being straight up â†‘)\n};\ntype Rotate3dTransform = [number, number, number];\ntype ParticleShape = \"mix\" | \"circles\" | \"rectangles\";\ninterface IConfettiExplosion {\n  count?: number;\n  colors?: string[];\n  class?: string;\n  particleCount?: number;\n  particleSize?: number;\n  particlesShape?: ParticleShape;\n  duration?: number;\n  force?: number;\n  stageHeight?: number;\n  stageWidth?: number;\n  shouldDestroyAfterDone?: boolean;\n}\n\ndeclare module \"solid-js\" {\n  namespace JSX {\n    interface Directives {\n      confettiStyles: Particle & IConfettiExplosion;\n    }\n  }\n}\n\nconst ROTATION_SPEED_MIN = 200; // minimum possible duration of single particle full rotation\nconst ROTATION_SPEED_MAX = 800; // maximum possible duration of single particle full rotation\nconst CRAZY_PARTICLES_FREQUENCY = 0.1; // 0-1 frequency of crazy curvy unpredictable particles\nconst CRAZY_PARTICLE_CRAZINESS = 0.3; // 0-1 how crazy these crazy particles are\nconst BEZIER_MEDIAN = 0.5; // utility for mid-point bezier curves, to ensure smooth motion paths\n\nconst FORCE = 0.5; // 0-1 roughly the vertical force at which particles initially explode\nconst SIZE = 12; // max height for particle rectangles, diameter for particle circles\nconst FLOOR_HEIGHT = 800; // pixels the particles will fall from initial explosion point\nconst FLOOR_WIDTH = 1600; // horizontal spread of particles in pixels\nconst PARTICLE_COUNT = 150;\nconst DURATION = 3500;\nconst COLORS = [\"#FFC700\", \"#FF0000\", \"#2E3191\", \"#41BBC7\"];\n\nconst createParticles = (count: number, colors: string[]): Particle[] => {\n  const increment = 360 / count;\n  return Array.from({ length: count }, (_, i) => ({\n    color: colors[i % colors.length],\n    degree: i * increment\n  }));\n};\n\nfunction round(num: number, precision: number = 2) {\n  return Math.round((num + Number.EPSILON) * 10 ** precision) / 10 ** precision;\n}\n\nfunction arraysEqual<ItemType>(a: ItemType[], b: ItemType[]) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) if (a[i] !== b[i]) return false;\n  return true;\n}\n\nconst mapRange = (value: number, x1: number, y1: number, x2: number, y2: number) =>\n  ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n\nconst rotate = (degree: number, amount: number) => {\n  const result = degree + amount;\n  return result > 360 ? result - 360 : result;\n};\n\nconst coinFlip = () => Math.random() > 0.5;\n\n// avoid this for circles, as it will have no visual effect\nconst zAxisRotation: Rotate3dTransform = [0, 0, 1];\n\nconst rotationTransforms: Rotate3dTransform[] = [\n  // dual axis rotations (a bit more realistic)\n  [1, 1, 0],\n  [1, 0, 1],\n  [0, 1, 1],\n  // single axis rotations (a bit dumber)\n  [1, 0, 0],\n  [0, 1, 0],\n  zAxisRotation\n];\n\nconst shouldBeCircle = (rotationIndex: number) =>\n  !arraysEqual(rotationTransforms[rotationIndex], zAxisRotation) && coinFlip();\n\nconst isUndefined = (value: any) => typeof value === \"undefined\";\n\nconst error = (message: string) => {\n  console.error(message);\n};\n\nfunction validate(\n  particleCount: number,\n  duration: number,\n  colors: string[],\n  particleSize: number,\n  force: number,\n  stageHeight: number,\n  stageWidth: number,\n  particlesShape: ParticleShape\n) {\n  const isSafeInteger = Number.isSafeInteger;\n  if (!isUndefined(particleCount) && isSafeInteger(particleCount) && particleCount < 0) {\n    error(\"particleCount must be a positive integer\");\n    return false;\n  }\n  if (!isUndefined(duration) && isSafeInteger(duration) && duration < 0) {\n    error(\"duration must be a positive integer\");\n    return false;\n  }\n  if (!isUndefined(particlesShape) && ![\"mix\", \"circles\", \"rectangles\"].includes(particlesShape)) {\n    error('particlesShape should be either \"mix\" or \"circles\" or \"rectangle\"');\n    return false;\n  }\n  if (!isUndefined(colors) && !Array.isArray(colors)) {\n    error(\"colors must be an array of strings\");\n    return false;\n  }\n  if (!isUndefined(particleSize) && isSafeInteger(particleSize) && particleSize < 0) {\n    error(\"particleSize must be a positive integer\");\n    return false;\n  }\n  if (!isUndefined(force) && isSafeInteger(force) && (force < 0 || force > 1)) {\n    error(\"force must be a positive integer and should be within 0 and 1\");\n    return false;\n  }\n  if (\n    !isUndefined(stageHeight) &&\n    typeof stageHeight === \"number\" &&\n    isSafeInteger(stageHeight) &&\n    stageHeight < 0\n  ) {\n    error(\"floorHeight must be a positive integer\");\n    return false;\n  }\n  if (\n    !isUndefined(stageWidth) &&\n    typeof stageWidth === \"number\" &&\n    isSafeInteger(stageWidth) &&\n    stageWidth < 0\n  ) {\n    error(\"floorWidth must be a positive integer\");\n    return false;\n  }\n  return true;\n}\n\nconst confettiStyles = (\n  node: HTMLDivElement,\n  inOptions: Accessor<Particle & IConfettiExplosion>\n) => {\n  const opts = inOptions();\n  // Get x landing point for it\n  const landingPoint = mapRange(\n    Math.abs(rotate(opts.degree, 90) - 180),\n    0,\n    180,\n    -opts.stageWidth! / 2,\n    opts.stageWidth! / 2\n  );\n  // Crazy calculations for generating styles\n  const rotation = Math.random() * (ROTATION_SPEED_MAX - ROTATION_SPEED_MIN) + ROTATION_SPEED_MIN;\n  const rotationIndex = Math.round(Math.random() * (rotationTransforms.length - 1));\n  const durationChaos = opts.duration! - Math.round(Math.random() * 1000);\n  const shouldBeCrazy = Math.random() < CRAZY_PARTICLES_FREQUENCY;\n  const isCircle =\n    opts.particlesShape !== \"rectangles\" &&\n    (opts.particlesShape === \"circles\" || shouldBeCircle(rotationIndex));\n\n  // x-axis disturbance, roughly the distance the particle will initially deviate from its target\n  const x1 = shouldBeCrazy ? round(Math.random() * CRAZY_PARTICLE_CRAZINESS, 2) : 0;\n  const x2 = x1 * -1;\n  const x3 = x1;\n  // x-axis arc of explosion, so 90deg and 270deg particles have curve of 1, 0deg and 180deg have 0\n  const x4 = round(Math.abs(mapRange(Math.abs(rotate(opts.degree, 90) - 180), 0, 180, -1, 1)), 4);\n\n  // roughly how fast particle reaches end of its explosion curve\n  const y1 = round(Math.random() * BEZIER_MEDIAN, 4);\n  // roughly maps to the distance particle goes before reaching free-fall\n  const y2 = round(Math.random() * opts.force! * (coinFlip() ? 1 : -1), 4);\n  // roughly how soon the particle transitions from explosion to free-fall\n  const y3 = BEZIER_MEDIAN;\n  // roughly the ease of free-fall\n  const y4 = round(\n    Math.max(mapRange(Math.abs(opts.degree - 180), 0, 180, opts.force!, -opts.force!), 0),\n    4\n  );\n  const setCSSVar = (key: string, val: string | number) => node.style.setProperty(key, val + \"\");\n\n  setCSSVar(\"--x-landing-point\", `${landingPoint}px`);\n  setCSSVar(\"--duration-chaos\", `${durationChaos}ms`);\n\n  setCSSVar(\"--x1\", `${x1}`);\n  setCSSVar(\"--x2\", `${x2}`);\n  setCSSVar(\"--x3\", `${x3}`);\n  setCSSVar(\"--x4\", `${x4}`);\n\n  setCSSVar(\"--y1\", `${y1}`);\n  setCSSVar(\"--y2\", `${y2}`);\n  setCSSVar(\"--y3\", `${y3}`);\n  setCSSVar(\"--y4\", `${y4}`);\n\n  setCSSVar(\n    \"--width\",\n    `${isCircle ? opts.particleSize : Math.round(Math.random() * 4) + opts.particleSize! / 2}px`\n  );\n  setCSSVar(\n    \"--height\",\n    (isCircle ? opts.particleSize : Math.round(Math.random() * 2) + opts.particleSize!) + \"px\"\n  );\n\n  setCSSVar(\"--rotation\", `${rotationTransforms[rotationIndex].join()}`);\n  setCSSVar(\"--rotation-duration\", `${rotation}ms`);\n  setCSSVar(\"--border-radius\", `${isCircle ? \"50%\" : \"0\"}`);\n};\n\nexport const ConfettiExplosion: Component<IConfettiExplosion> = inProps => {\n  let props = mergeProps(\n    {\n      particleCount: PARTICLE_COUNT,\n      duration: DURATION,\n      colors: COLORS,\n      particleSize: SIZE,\n      force: FORCE,\n      stageHeight: FLOOR_HEIGHT,\n      stageWidth: FLOOR_WIDTH,\n      shouldDestroyAfterDone: true,\n      particlesShape: \"mix\" as ParticleShape\n    },\n    inProps\n  );\n  const [isVisible, setVisible] = createSignal(true);\n  const isValid = createMemo(() =>\n    validate(\n      props.particleCount,\n      props.duration,\n      props.colors,\n      props.particleSize,\n      props.force,\n      props.stageHeight,\n      props.stageWidth,\n      props.particlesShape\n    )\n  );\n  const particles = createMemo(() => createParticles(props.particleCount, props.colors));\n  onMount(() => {\n    const timeoutId = setTimeout(() => {\n      if (props.shouldDestroyAfterDone) {\n        setVisible(false);\n      }\n    }, props.duration);\n    onCleanup(() => clearTimeout(timeoutId));\n  });\n  confettiStyles;\n  return (\n    <Show when={isVisible() && isValid()}>\n      <div\n        class={`sce-container${props.class ? ` ${props.class}` : \"\"}`}\n        style={{ \"--floor-height\": `${props.stageHeight}px` }}\n      >\n        <For each={particles()}>\n          {particle => (\n            <div class=\"sce-particle\" use:confettiStyles={{ ...particle, ...props }}>\n              <div style={{ \"--bgcolor\": particle.color }} />\n            </div>\n          )}\n        </For>\n      </div>\n    </Show>\n  );\n};\n"],"names":["ROTATION_SPEED_MIN","ROTATION_SPEED_MAX","CRAZY_PARTICLES_FREQUENCY","CRAZY_PARTICLE_CRAZINESS","BEZIER_MEDIAN","FORCE","SIZE","FLOOR_HEIGHT","FLOOR_WIDTH","PARTICLE_COUNT","DURATION","COLORS","createParticles","count","colors","increment","Array","from","length","_","i","color","degree","round","num","precision","Math","Number","EPSILON","arraysEqual","a","b","mapRange","value","x1","y1","x2","y2","rotate","amount","result","coinFlip","random","zAxisRotation","rotationTransforms","shouldBeCircle","rotationIndex","isUndefined","error","message","console","validate","particleCount","duration","particleSize","force","stageHeight","stageWidth","particlesShape","isSafeInteger","includes","isArray","confettiStyles","node","inOptions","opts","landingPoint","abs","rotation","durationChaos","shouldBeCrazy","isCircle","x3","x4","y3","y4","max","setCSSVar","key","val","style","setProperty","join","ConfettiExplosion","inProps","props","mergeProps","shouldDestroyAfterDone","isVisible","setVisible","createSignal","isValid","createMemo","particles","onMount","timeoutId","setTimeout","onCleanup","clearTimeout","_$createComponent","Show","when","_$memo","children","_el$","_tmpl$","_$insert","For","each","particle","_el$2","_tmpl$2","_el$3","firstChild","_$use","_$effect","removeProperty","_p$","_v$","class","_v$2","_$className","undefined"],"mappings":"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"}