{"version":3,"file":"index.module.js","sources":["../../src/index.tsx"],"sourcesContent":["import {\n  Component,\n  Show,\n  For,\n  onMount,\n  Accessor,\n  mergeProps,\n  createMemo,\n  createSignal,\n  onCleanup,\n} from 'solid-js';\nimport { styled, keyframes } from 'solid-styled-components';\n\ntype Particle = {\n  color: string; // color of particle\n  degree: number; // vector direction, between 0-360 (0 being straight up â†‘)\n};\ntype Rotate3dTransform = [number, number, number];\ntype ParticleShape = 'mix' | 'circles' | 'rectangles';\ninterface IConfettiExplosion {\n  count?: number;\n  colors?: string[];\n  particleCount?: number;\n  particleSize?: number;\n  particlesShape?: ParticleShape;\n  duration?: number;\n  force?: number;\n  stageHeight?: number;\n  stageWidth?: number;\n  shouldDestroyAfterDone?: boolean;\n}\n\ndeclare module 'solid-js' {\n  namespace JSX {\n    interface Directives {\n      confettiStyles: Particle & IConfettiExplosion;\n    }\n  }\n}\n\nconst ROTATION_SPEED_MIN = 200; // minimum possible duration of single particle full rotation\nconst ROTATION_SPEED_MAX = 800; // maximum possible duration of single particle full rotation\nconst CRAZY_PARTICLES_FREQUENCY = 0.1; // 0-1 frequency of crazy curvy unpredictable particles\nconst CRAZY_PARTICLE_CRAZINESS = 0.3; // 0-1 how crazy these crazy particles are\nconst BEZIER_MEDIAN = 0.5; // utility for mid-point bezier curves, to ensure smooth motion paths\n\nconst FORCE = 0.5; // 0-1 roughly the vertical force at which particles initially explode\nconst SIZE = 12; // max height for particle rectangles, diameter for particle circles\nconst FLOOR_HEIGHT = 800; // pixels the particles will fall from initial explosion point\nconst FLOOR_WIDTH = 1600; // horizontal spread of particles in pixels\nconst PARTICLE_COUNT = 150;\nconst DURATION = 3500;\nconst COLORS = ['#FFC700', '#FF0000', '#2E3191', '#41BBC7'];\n\nconst createParticles = (count: number, colors: string[]): Particle[] => {\n  const increment = 360 / count;\n  return Array.from({ length: count }, (_, i) => ({\n    color: colors[i % colors.length],\n    degree: i * increment,\n  }));\n};\n\nfunction round(num: number, precision: number = 2) {\n  return Math.round((num + Number.EPSILON) * 10 ** precision) / 10 ** precision;\n}\n\nfunction arraysEqual<ItemType>(a: ItemType[], b: ItemType[]) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) if (a[i] !== b[i]) return false;\n  return true;\n}\n\nconst mapRange = (\n  value: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n) => ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n\nconst rotate = (degree: number, amount: number) => {\n  const result = degree + amount;\n  return result > 360 ? result - 360 : result;\n};\n\nconst coinFlip = () => Math.random() > 0.5;\n\n// avoid this for circles, as it will have no visual effect\nconst zAxisRotation: Rotate3dTransform = [0, 0, 1];\n\nconst rotationTransforms: Rotate3dTransform[] = [\n  // dual axis rotations (a bit more realistic)\n  [1, 1, 0],\n  [1, 0, 1],\n  [0, 1, 1],\n  // single axis rotations (a bit dumber)\n  [1, 0, 0],\n  [0, 1, 0],\n  zAxisRotation,\n];\n\nconst shouldBeCircle = (rotationIndex: number) =>\n  !arraysEqual(rotationTransforms[rotationIndex], zAxisRotation) && coinFlip();\n\nconst isUndefined = (value: any) => typeof value === 'undefined';\n\nconst error = (message: string) => {\n  console.error(message);\n};\n\nfunction validate(\n  particleCount: number,\n  duration: number,\n  colors: string[],\n  particleSize: number,\n  force: number,\n  stageHeight: number,\n  stageWidth: number,\n  particlesShape: ParticleShape\n) {\n  const isSafeInteger = Number.isSafeInteger;\n  if (\n    !isUndefined(particleCount) &&\n    isSafeInteger(particleCount) &&\n    particleCount < 0\n  ) {\n    error('particleCount must be a positive integer');\n    return false;\n  }\n  if (!isUndefined(duration) && isSafeInteger(duration) && duration < 0) {\n    error('duration must be a positive integer');\n    return false;\n  }\n  if (\n    !isUndefined(particlesShape) &&\n    !['mix', 'circles', 'rectangles'].includes(particlesShape)\n  ) {\n    error('particlesShape should be either \"mix\" or \"circles\" or \"rectangle\"');\n    return false;\n  }\n  if (!isUndefined(colors) && !Array.isArray(colors)) {\n    error('colors must be an array of strings');\n    return false;\n  }\n  if (\n    !isUndefined(particleSize) &&\n    isSafeInteger(particleSize) &&\n    particleSize < 0\n  ) {\n    error('particleSize must be a positive integer');\n    return false;\n  }\n  if (!isUndefined(force) && isSafeInteger(force) && (force < 0 || force > 1)) {\n    error('force must be a positive integer and should be within 0 and 1');\n    return false;\n  }\n  if (\n    !isUndefined(stageHeight) &&\n    typeof stageHeight === 'number' &&\n    isSafeInteger(stageHeight) &&\n    stageHeight < 0\n  ) {\n    error('floorHeight must be a positive integer');\n    return false;\n  }\n  if (\n    !isUndefined(stageWidth) &&\n    typeof stageWidth === 'number' &&\n    isSafeInteger(stageWidth) &&\n    stageWidth < 0\n  ) {\n    error('floorWidth must be a positive integer');\n    return false;\n  }\n  return true;\n}\n\nconst confettiStyles = (\n  node: HTMLDivElement,\n  inOptions: Accessor<Particle & IConfettiExplosion>\n) => {\n  const opts = inOptions();\n  // Get x landing point for it\n  const landingPoint = mapRange(\n    Math.abs(rotate(opts.degree, 90) - 180),\n    0,\n    180,\n    -opts.stageWidth! / 2,\n    opts.stageWidth! / 2\n  );\n  // Crazy calculations for generating styles\n  const rotation =\n    Math.random() * (ROTATION_SPEED_MAX - ROTATION_SPEED_MIN) +\n    ROTATION_SPEED_MIN;\n  const rotationIndex = Math.round(\n    Math.random() * (rotationTransforms.length - 1)\n  );\n  const durationChaos = opts.duration! - Math.round(Math.random() * 1000);\n  const shouldBeCrazy = Math.random() < CRAZY_PARTICLES_FREQUENCY;\n  const isCircle =\n    opts.particlesShape !== 'rectangles' &&\n    (opts.particlesShape === 'circles' || shouldBeCircle(rotationIndex));\n\n  // x-axis disturbance, roughly the distance the particle will initially deviate from its target\n  const x1 = shouldBeCrazy\n    ? round(Math.random() * CRAZY_PARTICLE_CRAZINESS, 2)\n    : 0;\n  const x2 = x1 * -1;\n  const x3 = x1;\n  // x-axis arc of explosion, so 90deg and 270deg particles have curve of 1, 0deg and 180deg have 0\n  const x4 = round(\n    Math.abs(mapRange(Math.abs(rotate(opts.degree, 90) - 180), 0, 180, -1, 1)),\n    4\n  );\n\n  // roughly how fast particle reaches end of its explosion curve\n  const y1 = round(Math.random() * BEZIER_MEDIAN, 4);\n  // roughly maps to the distance particle goes before reaching free-fall\n  const y2 = round(Math.random() * opts.force! * (coinFlip() ? 1 : -1), 4);\n  // roughly how soon the particle transitions from explosion to free-fall\n  const y3 = BEZIER_MEDIAN;\n  // roughly the ease of free-fall\n  const y4 = round(\n    Math.max(\n      mapRange(Math.abs(opts.degree - 180), 0, 180, opts.force!, -opts.force!),\n      0\n    ),\n    4\n  );\n  const setCSSVar = (key: string, val: string | number) =>\n    node.style.setProperty(key, val + '');\n\n  setCSSVar('--x-landing-point', `${landingPoint}px`);\n  setCSSVar('--duration-chaos', `${durationChaos}ms`);\n\n  setCSSVar('--x1', `${x1}`);\n  setCSSVar('--x2', `${x2}`);\n  setCSSVar('--x3', `${x3}`);\n  setCSSVar('--x4', `${x4}`);\n\n  setCSSVar('--y1', `${y1}`);\n  setCSSVar('--y2', `${y2}`);\n  setCSSVar('--y3', `${y3}`);\n  setCSSVar('--y4', `${y4}`);\n\n  // set --width and --height here\n  setCSSVar(\n    '--width',\n    `${\n      isCircle\n        ? opts.particleSize\n        : Math.round(Math.random() * 4) + opts.particleSize! / 2\n    }px`\n  );\n  setCSSVar(\n    '--height',\n    (isCircle\n      ? opts.particleSize\n      : Math.round(Math.random() * 2) + opts.particleSize!) + 'px'\n  );\n\n  setCSSVar('--rotation', `${rotationTransforms[rotationIndex].join()}`);\n  setCSSVar('--rotation-duration', `${rotation}ms`);\n  setCSSVar('--border-radius', `${isCircle ? '50%' : '0'}`);\n};\nconfettiStyles;\n\nconst ConfettiExplosion: Component<IConfettiExplosion> = (inProps) => {\n  let props = mergeProps(\n    {\n      particleCount: PARTICLE_COUNT,\n      duration: DURATION,\n      colors: COLORS,\n      particleSize: SIZE,\n      force: FORCE,\n      stageHeight: FLOOR_HEIGHT,\n      stageWidth: FLOOR_WIDTH,\n      shouldDestroyAfterDone: true,\n      particlesShape: 'mix' as ParticleShape,\n    },\n    inProps\n  );\n  const [isVisible, setVisible] = createSignal(true);\n  const isValid = createMemo(() =>\n    validate(\n      props.particleCount,\n      props.duration,\n      props.colors,\n      props.particleSize,\n      props.force,\n      props.stageHeight,\n      props.stageWidth,\n      props.particlesShape\n    )\n  );\n  const particles = createMemo(() =>\n    createParticles(props.particleCount, props.colors)\n  );\n  onMount(() => {\n    const timeoutId = setTimeout(() => {\n      if (props.shouldDestroyAfterDone) {\n        setVisible(false);\n      }\n    }, props.duration);\n    onCleanup(() => clearTimeout(timeoutId));\n  });\n  return (\n    <Show when={isVisible() && isValid()}>\n      <Confetti\n        class=\"container\"\n        style={{ '--floor-height': `${props.stageHeight}px` }}\n      >\n        <For each={particles()}>\n          {(particle) => (\n            <div\n              class=\"particle\"\n              use:confettiStyles={{ ...particle, ...props }}\n            >\n              <div style={{ '--bgcolor': particle.color }} />\n            </div>\n          )}\n        </For>\n      </Confetti>\n    </Show>\n  );\n};\n\nconst yAxis = keyframes`\n  to {\n    transform: translate3d(0, var(--floor-height), 0);\n  }\n`;\nconst xAxis = keyframes`\n  to {\n    transform: translate3d(var(--x-landing-point), 0, 0);\n  }\n`;\nconst rotation = keyframes`\n  to {\n    transform: rotate3d(var(--rotation), 360deg);\n  }\n`;\nconst Confetti = styled('div')`\n  width: 0;\n  height: 0;\n  overflow: visible;\n  position: relative;\n  transform: translate3d(var(--x, 0), var(--y, 0), 0);\n  z-index: 1200;\n  .particle {\n    animation: ${xAxis} var(--duration-chaos) forwards\n      cubic-bezier(var(--x1), var(--x2), var(--x3), var(--x4));\n    div {\n      position: absolute;\n      top: 0;\n      left: 0;\n      animation: ${yAxis} var(--duration-chaos) forwards\n        cubic-bezier(var(--y1), var(--y2), var(--y3), var(--y4));\n      width: var(--width);\n      height: var(--height);\n      &:before {\n        display: block;\n        height: 100%;\n        width: 100%;\n        content: '';\n        background-color: var(--bgcolor);\n        animation: ${rotation} var(--rotation-duration) infinite linear;\n        border-radius: var(--border-radius);\n      }\n    }\n  }\n`;\n\nexport default ConfettiExplosion;\n"],"names":["ROTATION_SPEED_MIN","ROTATION_SPEED_MAX","CRAZY_PARTICLES_FREQUENCY","CRAZY_PARTICLE_CRAZINESS","BEZIER_MEDIAN","FORCE","SIZE","FLOOR_HEIGHT","FLOOR_WIDTH","PARTICLE_COUNT","DURATION","COLORS","createParticles","count","colors","increment","Array","from","length","_","i","color","degree","round","num","precision","Math","Number","EPSILON","arraysEqual","a","b","mapRange","value","x1","y1","x2","y2","rotate","amount","result","coinFlip","random","zAxisRotation","rotationTransforms","shouldBeCircle","rotationIndex","isUndefined","error","message","console","validate","particleCount","duration","particleSize","force","stageHeight","stageWidth","particlesShape","isSafeInteger","includes","isArray","confettiStyles","node","inOptions","opts","landingPoint","abs","rotation","durationChaos","shouldBeCrazy","isCircle","x3","x4","y3","y4","max","setCSSVar","key","val","style","setProperty","join","ConfettiExplosion","inProps","props","mergeProps","shouldDestroyAfterDone","isVisible","setVisible","createSignal","isValid","createMemo","particles","onMount","timeoutId","setTimeout","onCleanup","clearTimeout","_$createComponent","_$memo","particle","yAxis","keyframes","xAxis","Confetti","styled"],"mappings":"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"}